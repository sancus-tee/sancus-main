name: 'Get Docker image name'
description: 'Generates the docker image name and version based on merge PR or master push'
inputs:
  security:
    description: 'Used security (64 or 128)'
    required: false
    default: 64
  core:
    description: 'Version of the core; choose between "sancus" (default) and "aion" (availability guarantees)'
    required: false
    default: sancus
outputs:
  image-name:
    description: "Docker image name"
    value: ${{ steps.generate-name.outputs.name }}
  image-version:
    description: "Version tag of the Docker image"
    value: ${{ steps.generate-name.outputs.version }}
  image-id:
    description: "Full image URL"
    value: ${{ steps.generate-name.outputs.id }}
runs:
  using: "composite"
  steps:
    - id: generate-name
      run: |
        # since the sancus build system always creates sancus-devel, we only attach the security to the ID
        IMAGE_NAME=${{ inputs.core }}-devel
        IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME-${{ inputs.security }}
        # Change all uppercase to lowercase
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        # Strip git ref prefix from version
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        # Strip "v" prefix from tag name
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        # Use Docker `latest` tag convention
        [ "$VERSION" == "master" ] && VERSION=latest
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        echo "::set-output name=name::$(echo $IMAGE_NAME)"
        echo "::set-output name=version::$(echo $VERSION)"
        echo "::set-output name=id::$(echo $IMAGE_ID)"
      shell: bash
